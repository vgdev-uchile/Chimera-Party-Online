[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarStep" id=2]
default_input_values = [ 0, 1.0, 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "Color"

[resource]
code = "shader_type canvas_item;
uniform vec4 Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:2

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ColorUniform:8
	vec3 n_out8p0 = Color.rgb;
	float n_out8p1 = Color.a;

// VectorOp:10
	vec3 n_out10p0 = n_out3p0 * n_out8p0;

// VectorScalarStep:12
	float n_in12p0 = 1.00000;
	vec3 n_out12p0 = step(n_in12p0, n_out3p0);

// VectorOp:13
	vec3 n_out13p0 = n_out10p0 + n_out12p0;

// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -589, -93 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 360, 180 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -540, 300 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -340, 200 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -540, 200 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -220, 360 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -100, 40 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -80, 160 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 120, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 2, 4, 0, 3, 0, 3, 1, 0, 1, 3, 0, 12, 1, 10, 0, 13, 0, 12, 0, 13, 1, 13, 0, 0, 0, 3, 0, 10, 0, 8, 0, 10, 1 )
